library(indiedown)
use_indiedown_gfonts()
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
indiedown_path()
file_preamble <- tempfile(fileext = ".tex")
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
txt
library(uofgdataanalyticsreport)
file_preamble <- tempfile(fileext = ".tex")
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
txt
txt <- gsub("<<indiedown_path>>", indiedown_path_tex(), txt, fixed = TRUE)
txt
includes <- rmarkdown::includes(in_header = file_preamble)
?markdown::pdf_document
?pdf_document
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
file_preamble <- tempfile(fileext = ".tex")
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
library(indiedown)
file_preamble <- tempfile(fileext = ".tex")
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
txt <- gsub("<<indiedown_path>>", indiedown_path_tex(), txt, fixed = TRUE)
library(indiedown)
file_preamble <- tempfile(fileext = ".tex")
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
?indiedown_path
??indiedown_path
library(uofgdataanalyticsreport)
txt <- readLines(file.path(indiedown_path(), "preamble.tex"), encoding = "UTF-8")
txt <- gsub("<<indiedown_path>>", indiedown_path_tex(), txt, fixed = TRUE)
writeLines(txt, file_preamble)
if (is.null(includes)) {
includes <- rmarkdown::includes(in_header = file_preamble)
} else {
if ("in_header" %in% names(includes)) {
warning("The use of 'includes, in_header' overwrites preamble.tex from asset and may mess up the layout.")
} else {
includes$in_header <- file_preamble
}
}
includes <- rmarkdown::includes(in_header = file_preamble)
ans <- rmarkdown::pdf_document(includes = includes, keep_tex=TRUE,...)
ans <- rmarkdown::pdf_document(includes = includes, keep_tex=TRUE)
View(ans)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
?pdf_document
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
message(param)
library(uofgdataanalyticsreport)
message(params)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
setwd("~/Google Drive/GitHub/uofgdataanalyticsreport/inst/indiedown")
library(uofgdataanalyticsreport)
args <- apply_default_yaml(metadata = metadata)
apply_default_yaml
??indiedown_glue
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
mtcars
mtcars %>% ggplot(aes(mgp,cyl)) + geom_point()
library(knitr)
library(kableExtra)
library(tidyverse)
library(uofgdataanalyticsreport)
cd_knit_chunk_opts()
mtcars %>% ggplot(aes(mgp,cyl)) + geom_point()
mtcars %>% ggplot(aes(mpg,cyl)) + geom_point()
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
cd_toc <- function(depth = 2,
new_page= TRUE){
base<- indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
if(new_page){
base <- indiedown_glue(
"<<base>>
\newpage
"
)
indiedown_glue(
"r(
<<base>>
)"
)
}
}
cd_toc <- function(depth = 2,
new_page= TRUE){
base<- indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
if(new_page){
base <- indiedown_glue(
"<<base>>
\newpage
"
)
}
indiedown_glue(
"r(
<<base>>
)"
)
}
indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
base<- glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
"
)
newpage <- if_else(new_page,"\newline","")
newpage <- if_else(new_page,"\\newline","")
library(tidyverse)
newpage <- if_else(new_page,"\\newline","","")
new_page= TRUE
newpage <- if_else(new_page,"\\newline","","")
newpage <- if_else(new_page,"\newline","","")
library(uofgdataanalyticsreport)
depth=2
base<- indiedown_glue(
"\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
"
)
base<- indiedown_glue(
"r(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
base<- indiedown_glue(
"r(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
)"
)
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
)"
)
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
new_page<-FALSE
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
newpage <- if_else(new_page,"\newline","","")
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
library(uofgdataanalyticsreport)
if(new_page) newpage <-"\newpage"
else newpage <-""
if(new_page){newpage <-"\newpage"
}else{newpage <-""}
library(uofgdataanalyticsreport)
newpage <-"\newpage"
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
newpage <-"\\newpage"
indiedown_glue(
# R >=4, raw strings allow to write LaTeX without escaping \ etc
r"(
\setcounter{tocdepth}{<<depth>>}
\tableofcontents
<<newpage>>
)"
)
library(uofgdataanalyticsreport)
library(uofgdataanalyticsreport)
